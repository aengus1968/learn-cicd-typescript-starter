name: Build and Deploy Notely to Cloud Run

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: intense-optics-472820-m4
  REGION: us-central1
  REPO_NAME: notely-ar-repo
  IMAGE_NAME: notely
  SERVICE_NAME: notely

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker to use gcloud
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build container image (tag with commit SHA)
        run: |
          IMAGE_URI=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t "$IMAGE_URI" .

      - name: Verify DATABASE_URL is set (masked)
        run: |
          if [ -z "${DATABASE_URL}" ]; then
            echo "ERROR: DATABASE_URL is not set in this job."
            exit 1
          fi
          echo "DATABASE_URL length: ${#DATABASE_URL}"
          case "$DATABASE_URL" in
            libsql://*) echo "Scheme OK (libsql://)";;
            *) echo "WARNING: DATABASE_URL does not start with libsql://";;
          esac

      - name: Run migrations
        run: |
          npx drizzle-kit migrate

      - name: Push image to Artifact Registry
        run: docker push "$IMAGE_URI"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image="$IMAGE_URI" \
            --region=${{ env.REGION }} \
            --allow-unauthenticated \
            --project=${{ env.PROJECT_ID }} \
            --max-instances=4 \
            --port=80

